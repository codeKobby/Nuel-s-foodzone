
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper functions
    function isManager() {
      return get(/databases/$(database)/documents/credentials/manager).data.uid == request.auth.uid;
    }
    
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow authenticated users to read menu items and create orders/expenses
    match /menuItems/{item} {
      allow read: if isAuthenticated();
      allow write: if isManager(); // Only managers can edit the menu
    }
    
    match /orders/{orderId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.resource.data.cashierId == request.auth.uid;
      allow update: if isAuthenticated() && (isManager() || resource.data.cashierId == request.auth.uid);
      allow delete: if isManager();
    }
    
    match /miscExpenses/{expenseId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.resource.data.cashierId == request.auth.uid;
      allow update, delete: if isManager();
    }
    
    // Managers can read all reports, cashiers cannot
    match /reconciliationReports/{reportId} {
        allow read, write: if isManager();
    }

    // Managers can manage cashier accounts
    match /cashierAccounts/{accountId} {
        allow read, create, update, delete: if isManager();
    }

    // Secure credentials - only managers can update their own password
    match /credentials/{role} {
        allow read: if isAuthenticated();
        allow write: if isManager() && role == 'manager';
    }

    // Only allow authenticated users to interact with counters
    match /counters/{counterId} {
        allow read, write: if isAuthenticated();
    }
  }
}
